name: Build Wheel Package


on:
  pull_request:
  push:
    branches:
      - main


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Count Commits with Prefix
      id: count-commits
      run: |
        echo "COUNT_COMMITS_FIX=$(git log --oneline --grep="^fix:" | wc -l)" >> $GITHUB_ENV
        echo "COUNT_COMMITS_FEAT=$(git log --oneline --grep="^feat:" | wc -l)" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: pip install setuptools wheel twine
    
    - name: Build package
      run: python setup.py bdist_wheel
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/*.whl


  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Generate New Tag
        id: generate_tag
        run: |
          DATE=$(date +%Y.%m.%d)
          COMMIT_COUNT=$(git rev-list HEAD | wc -l)
          echo "::set-output name=TAG_NAME::${DATE}.${COMMIT_COUNT}"
    
      - name: Create Tag
        run: |
          TAG=${{ steps.generate_tag.outputs.TAG_NAME }}
          git config user.name "GitHub Actions Bot"
          git config user.email "bot@example.com"
          git tag -a "$TAG" -m "Automatically generated tag from GitHub Actions"
          git push origin "$TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          gh release create --draft --title "${{ steps.generate_tag.outputs.TAG_NAME }}" \
            --notes "Automatic release created via GitHub Actions" \
            --target ${{ github.sha }} \
            ${{ steps.generate_tag.outputs.TAG_NAME }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/*.whl


  publish-pypi:
    needs: [build]
    environment: pypi
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
