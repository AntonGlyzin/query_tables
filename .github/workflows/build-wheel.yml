name: Build Wheel Package


on:
  pull_request:
  push:
    branches:
      - main


jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version_app: ${{ steps.version.outputs.VERSION_APP }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Generate New version
      id: version
      run: |
        FIX=$(git log --oneline --grep="fix:" | wc -l)
        FEAT=$(git log --oneline --grep="feat:" | wc -l)
        echo "VERSION_APP=1.${FEAT}.${FIX}" >> $GITHUB_ENV
        echo "::set-output name=VERSION_APP::${VERSION_APP}"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: pip install setuptools wheel twine
    
    - name: Build package
      run: python setup.py bdist_wheel
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/*.whl


  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Create Release
        run: gh release create "v${{ needs.build.outputs.version_app }}" dist/*  \
          --draft --generate-notes --target ${{ github.sha }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  publish-pypi:
    needs: [build]
    environment: pypi
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
